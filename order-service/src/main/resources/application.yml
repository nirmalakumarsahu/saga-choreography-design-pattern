# Server Configuration
server:
  port: 8787

spring:
  application:
    name: order-service

  #MySQL Configuration
  datasource:
    url: jdbc:mysql://localhost:3307/microservices
    username: ${MYSQL_USER:nirmala}
    password: ${MYSQL_PASSWORD:nirmala@123}

    # HikariCP Connection Pool Configuration
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 30000
      pool-name: HikariCP
      max-lifetime: 1800000
      connection-timeout: 30000

  #JPA Configuration
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true

  # Kafka Configuration
  cloud:
    # Function configuration
    function:
      definition: orderEventProducer; paymentEventConsumer

    stream:
      # Bindings for Kafka Streams
      bindings:
        orderEventProducer-out-0:
          destination: ${stream.topics.order-event}
        paymentEventConsumer-in-0:
          destination: ${stream.topics.product-event}

      # Kafka Server Configuration
      kafka:
        binder:
          brokers: localhost:9092

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, beans
  endpoint:
    health:
      show-details: always

# Swagger Configuration
springdoc:
  swagger-ui:
    path: /documentation
  api-docs:
    path: /api-docs

# Topic Configuration
stream:
  topics:
    order-event: order-event
    product-event: product-event